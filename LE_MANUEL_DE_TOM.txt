   |========================|
  ||                        ||
_|||    LE MANUEL DE TOM    |||_
 |||   créé le 31/05/2017   |||
  ||                        ||
   |========================|


====================================================================================================

# SYMFONY

	# Initialiser / configurer composer

		composer init
	

	# installer composer / charger les dépendances

		composer install

	
	# recrer l'autoload project 

		composer dump-autoload


	# Metre à jour Composer
		
		composer self-update
	
	
	# Créer projet Synfony avec version

		composer create-project symfony/website-skeleton my-project
		
		composer create-project symfony/framework-standard-edition <project_name> 3.2.4


	# Étapes pour construction une base de données

		Créer une DB
			php bin\console doctrine:database:create

		Créer une entité
			php bin\console make:entity

		Valider un schema
			php bin\console doctrine:schema:validate

		Créer une migration
			php bin\console make:migration

		Jouer une migration
			php bin\console doctrine:migrations:migrate


	# Liste des Bundles enregistré
		
		bin/console config:dump-reference


	# Liste des services
		
		bin/console debug:container


	# Liste des parametres
		
		bin/console debug:container --parameters


	# Vider le cache en prod
		
		bin/console cache:clear --env=prod

====================================================================================================

# UBUNTU
	

	# Changer les signets racourci par default

		Edit file :
			~/.config/user-dirs.dirs
			/etc/xdg/user-dirs.defaults
			~/.config/gtk-3.0/bookmarks


	# tuer une application bloquer

		ps aux | grep nom_appli_bloquer

		kill -9 pid_du_processus_à_tuer


	# IP

		ifconfig

		# Adresse Publique

			curl ifconfig.me

		# Adresse Locale

			hostname -I


	# Changer le propriétaire et le groupe d'un fichier ou dossier

		sudo chown propriétaire:groupe fichier


	# Changer les permissions
	
		sudo chmod 777 fichier


	# Restart le panneau de tâches et Panneau de menu

		killall unity-panel-service


	# Count file

		find DIR_NAME -name "*.ext" -type f | wc -l


	# Delete all file

		find DIR_NAME -name "*.ext" -type f -delete


	# Copy with verbose

		cp -Riv source_file target_directory


	# Copier tous les fichier d'un dossier dans un autre avec les fichiers cachées

		mv /source/{,.[^.]}* /target/


	# Activer le numlock / Pavé numérique au démarrage

		sudo apt -y install numlockx
		sudo sh -c 'printf "[SeatDefaults]\ngreeter-setup-script=numlockx on\n" >/usr/share/lightdm/lightdm.conf.d/50-numlock.conf'


	# Redemarer le bluetooth

		sudo service bluetooth restart


	# LXD CONTAINER (https://tutorials.ubuntu.com/tutorial/tutorial-setting-up-lxd-1604#0)

		# Configurer le LXD

			sudo lxd init

		# Liste des conteneurs

			lxc list

		# Exécuter des commandes dans le conteneur

			lxc exec container_name commande_name

		# Accès au shell du conteneur

			lxc exec ubuntu-neeva /bin/bash

		# Arrêt du conteneur

			lxc stop container_name

		# Supprimer un conteneur

			lxc delete container_name


	# Convertir du texte d'un encodage de caractère à un autre

		iconv -f=UTF8 -t=iso885915 toolbar.sql > toolbar_iso.sql

	# Renommer des fichiers avec expression regulière (regex)

		ex : 3608301245143_LESMINIONS_MIAA009_C28_Ophthalmic_360_00.png ==> 03608301245143_360-000.png

		rename -nv 's/^(\d+).+(_360).(\d+).png/0$1$2-0$3.png/' *.png

====================================================================================================

# DATABASES

	====================================================================================================

	# MySql

		# Mise à jour d'un champs avec une echantillons de texte d'un autre champs de la même table

			update `catalog_product_translation` set `override_name` = SUBSTRING_INDEX(name, ' ', 1) where `override_name` = 'AFFLELOU FORTY';

		# Mise à jour d'un champs en remplacant un texte precis par un autre, (sensible à la case)

			UPDATE `catalog_product_translation` SET override_name = REPLACE(override_name, ' AFFLELOU', '');

		# Supprimer les doublons et conserver la ligne avec l'ID le plus élevée

			-- Step 1: Copy all unique rows with highest id
			CREATE TEMPORARY TABLE tmp_table (
			    SELECT MAX(reference) reference 
			    FROM catalog_contact_lens_package 
			    GROUP BY contact_lens_reference, diameter, radius, sphere, back_cylinder, front_cylinder, axis, addition, prism
			);

			-- Step 2: Delete all rows in original table that are not in the temporary table
			DELETE FROM catalog_contact_lens_package WHERE reference NOT IN (SELECT reference FROM tmp_table);

			-- Step 3: Remove temporary table
			DROP TABLE tmp_table;

	====================================================================================================

	# ORACLE


		# Connexion

			sqlplus username/password@database-name


		# Deconnexion

			exit


		# Créer un Schema / User

			CREATE USER "SCHEMA_NAME" PROFILE "DEFAULT" IDENTIFIED BY "PASSWORD" ACCOUNT UNLOCK;


		# Accorder tous les privilèges au Schema

			GRANT DBA TO SCHEMA_NAME;


		# Supprimer un Schema

			DROP USER user_name CASCADE;


		# Changer de schema

			CONNECT username/password;


		# Liste users

			select USERNAME, USER_ID, ACCOUNT_STATUS, PROFILE, CREATED from DBA_USERS ORDER BY USER_ID DESC;


		# Liste tables appartenant à l'user actuel

			select tablespace_name, table_name from user_tables;


		# Execute un Fichier .sql

			@/Users/tom/file.sql


		# Description de la table user_tables

			DESC user_tables


		# Importer DUMP

			 imp username/password file=schema_to_imp.dmp fromuser=user_from_export touser=user_to_imp log=imp_schema.log


		# Exporter DUMP

			exp username/password file=schema_to_exp.dmp log=exp_schema.log owner=USERS statistics=none


		# Importer DATADUMP

			impdp username/password dumpfile=schema_to_imp.dpump directory=expdp_dir logfile=impdp_schema.log [schemas=schema_to_import] [remap_schema=old_schema:new_schema] [remap_tablespace=old_tablespace:new_tablespace] [sqlfile=ddl_dump.txt]

			impdp thalesV5/neev4User2Db DIRECTORY=datapump DUMPFILE=expdp-etrainrec-sav.dmp EXCLUDE=STATISTICS EXCLUDE=USER EXCLUDE=SYSTEM_GRANT EXCLUDE=ROLE_GRANT EXCLUDE=DEFAULT_ROLE schemas=etrainrec REMAP_SCHEMA=etrainrec:thalesV5 REMAP_TABLESPACE=DATA:USERS


		# Exporter DATADUMP

			expdp username/password dumpfile=schema_to_exp.dpump directory=expdp_dir logfile=expdp_schema.log schemas=schema_to_export


		# Liste des repertoires accessibles

			SELECT * FROM all_directories;


		# List All defined variables

			DEF


		# Define variable utilisateur

			DEF my_variable = "his value"


		# Undefine variable utilisateur

			UNDEF my_variable


		# SID ( System ID ) INSTANCE_NAME

			SHOW PARAMETER INSTANCE_NAME;


		# SERVICE_NAME

			SHOW PARAMETER SERVICE_NAMES;


		# List TableSpace

			SELECT TABLESPACE_NAME FROM USER_TABLESPACES;
			SELECT DISTINCT OWNER, TABLESPACE_NAME FROM DBA_SEGMENTS;
			SELECT USERNAME,DEFAULT_TABLESPACE,TEMPORARY_TABLESPACE FROM DBA_USERS;


		# Modifiy column output length

			SET WRAP OFF
			SET LINESIZE 212


		# Connaitre id du process en cours sur la session

			select s.sid, s.serial#, s.status, p.spid from v$session s, v$process p where s.username = 'AGRICA_TEST_20170816' and p.addr (+) = s.paddr;


		# tue un process

			alter system kill session '<sid>,<serial#>';


		# Changer la valeur du fuseau horaire / timezone (ORA-56935) 

			ALTER SESSION SET EVENTS '30090 TRACE NAME CONTEXT FOREVER, LEVEL 32';
			exec dbms_dst.unload_secondary;


		# Vérifier la nouvelle valeur du fuseau horaire / timezone

			SELECT PROPERTY_NAME, SUBSTR (property_value, 1, 30) value FROM DATABASE_PROPERTIES WHERE PROPERTY_NAME LIKE 'DST_%' ORDER BY PROPERTY_NAME;

	====================================================================================================

	# PostgreSQL
		

		# Créer une base de données

			createdb dbname -U username

			ou

			bdd=# CREATE DATABASE dbname WITH OWNER = username ENCODING = 'UTF8';


		# Connexion

			psql -h host -d dbname -U username


		# Déconnexion

			dbname=> \q


		# Supprimer la base de données

			dropdb dbname -U username


		# Faire une restauration à partir d'un fichier .sql

			psql -h localhost -U username -d dbname -f filename.sql


		# Faire une restauration à partir d'un fichier .dump

			pg_restore -h localhost -U username -d dbname filename.dump


		# Faire une restauration avec vidage de la base de données en même temps (--clean)
			
			pg_restore -c -h localhost -U username -v -d dbname < filename.dmp


		# Faire une restauration en changant d'owner avec log d'erreurs

			pg_restore -h localhost -U username --no-owner --role=newowner -d dbname filename.dump > output.txt 2>&1


		# Sauvegarder une base de données dans un fichier .sql

			pg_dump -h localhost -U username -f filename.sql dbname


		# Sauvegarder une base de données dans un fichier .dump

			pg_dump -h localhost -U username -Fc -v dbname > filename.dmp


		# liste les bases de données

			dbname=> \l


		# Liste les tables

			dbname=> \d


		# exécute un fichier

			dbname=> \i filename


		# Exporter un resultat dans un fichier csv

			dbname=> \copy (Select * From foo) To '/tmp/test.csv' With CSV DELIMITER ';';


		# Connexion rapide

			Pour ne pas taper le mot de passe à chaque connexion psql, il faut renseigner le "username" et le "password" dans un fichier .pgpass à la racine de l'utilisateur /home/USER/.pgpass

				localhost:8888:*:username:password


		# Modifiy column output length

			dbname=> \pset format wrapped


		# Créer / Modifier un nouveau Role

			$ sudo -i -u postgres
			$ psql
			CREATE ROLE rolename WITH SUPERUSER CREATEDB CREATEROLE LOGIN ENCRYPTED PASSWORD 'password';
			ALTER ROLE rolename WITH SUPERUSER CREATEDB CREATEROLE LOGIN ENCRYPTED PASSWORD 'password';


		# Désactiver un Trigger

			ALTER TABLE mytable DISABLE TRIGGER mytrigger;  
			ALTER TABLE mytable ENABLE TRIGGER mytrigger;


		# Désactiver tous les Triggers
		
			ALTER TABLE mytable DISABLE TRIGGER ALL;  
			ALTER TABLE mytable ENABLE TRIGGER ALL;

		# Taille de la base de données

			SELECT pg_size_pretty( pg_database_size( current_database() ) ) As dump, pg_database_size( current_database() ) As base_de_donnee;

	====================================================================================================

	# SQL SERVER


		# Démarage du service

			sudo /opt/mssql/bin/sqlservr start
			sudo /opt/mssql/bin/sqlservr start&


		# Connexion

			sqlcmd -S localhost -U username -P 'password' -d dataname


		# Creation de la base de données (pas nécessaire normalement)

			CREATE DATABASE neeva ON (NAME = neevadb, FILENAME = '/var/opt/mssql/data/neevadb.mdf') LOG ON (NAME = neevadb_log, FILENAME = '/var/opt/mssql/data/neevadb_log.ldf')
			go


		# Insert file

			sqlcmd -S localhost -U username -P 'password' -d dataname -i file


		# Faire une restauration à partir d'un fichier bak

			RESTORE DATABASE new_database_name
			FROM DISK = '/var/opt/mssql/backups/file.bak'
			WITH MOVE 'data_file' TO '/var/opt/mssql/data/data_file.mdf',
			MOVE 'data_file_log' TO '/var/opt/mssql/data/data_file_log.ldf'
			GO

			exemple :
			sqlcmd -S localhost -U SA -P 'neev4User2Db' -Q "RESTORE DATABASE CAEN_20180108 FROM DISK = '/var/opt/mssql/backups/neevadb_backup_2018_01_08_220011_0008098.bak' WITH MOVE 'neevadb' TO '/var/opt/mssql/data/caen.mdf', MOVE 'neevadb_log' TO '/var/opt/mssql/data/caen_log.ldf'"


		# Supprimer une base

			sqlcmd -S <server_name>\<instance_name>
			drop database <db_name>
			go


		# Liste les bases de données

			SELECT name, database_id, create_date FROM sys.databases
			GO  


		# Liste des tables

			SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE'
			GO

		# Change le nom du schema en dbo pour toutes les tables

			exec sp_MSforeachtable "ALTER SCHEMA dbo TRANSFER ?"

		# Au cas où l'utilisateur "neeva" existe déjà dans un base de données d'un client restaurée, voici la commande à exécuter (en tant qu'administrateur)

			use db_name;
			EXEC sp_change_users_login 'Auto_Fix', 'neeva'


		# Output format

			sqlcmd -S my_server
			:setvar SQLCMDMAXVARTYPEWIDTH 30
			:setvar SQLCMDMAXFIXEDTYPEWIDTH 30
			GO

			or

			sqlcmd -S my_server -y 30 -Y 30.
			sqlcmd -S localhost -y 100 -Y 50 -U SA -P 'neev4User2Db' -d CAEN_05122017 -i QueryDebug.sql -o retour.txt


		# Output to CSV file

			sqlcmd -S hostname -U username -P pwd -d databasename -i file.sql -o file.csv -W -w 999 -s ";"


		# liste les serveurs

			sqlcmd -L


		# Afficher les propriétés d'une base de données

			SELECT database_id, is_read_only, collation_name, compatibility_level FROM sys.databases WHERE name = 'dbname';

====================================================================================================

# DIVERS

	
	# afficher le code de retour du dernier processus d'exécution

		exit(159);
		echo $?
		> 159


	# Fin de ligne (character encoding)

		%0D%0A

====================================================================================================

# Mac OS
	
	# Raccourci clavier | shortcut

		# Afficher ou masquer les fichiers cachés dans Finder

			Maj + fn + Cmd + ;


====================================================================================================

# Docker

	# Remove all images

		docker rmi -f $(docker images -qa)
	
	# Stop and remove all containers

		docker container stop `docker container ls -qa` && docker container rm -fv `docker container ls -qa`

	# Remove all Exited containers

		docker ps -f status=exited --format {{.ID}} | xargs docker rm

	# Remove all Volume

		docker volume rm -f $(docker volume ls -q)


====================================================================================================

# Google Chrome

	# Tab Freeze
		
		chrome://flags/#proactive-tab-freeze